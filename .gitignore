# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files in version control:
#  - .idea/modules.xml
#  - .idea/*.iml
#  - .idea/misc.xml
#  - .idea/vcs.xml
.idea/

# VS Code
.vscode/

# Augment
.augment/

# AI Vehicle System specific
data/
logs/
*.db
*.sqlite
*.faiss
*.index

# Model files and embeddings
models/
embeddings/
checkpoints/
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.onnx
*.pt
*.pth
*.safetensors

# Vector databases and indices
chromadb/
*.chroma
*.vectordb
*.annoy
*.nmslib

# Large data files
*.csv
*.json
*.parquet
*.arrow
*.feather
*.xlsx
*.xls

# Evaluation and benchmark results
results/
benchmarks/
evaluation/
*.benchmark
*.eval

# Temporary files
tmp/
temp/
.tmp/

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Docker
.dockerignore

# Secrets and keys
*.key
*.pem
*.p12
*.crt
*.csr
*.p7b
*.p7c
*.pfx
secrets/
.secrets/
credentials/
.credentials/

# API keys and tokens
*.token
*.apikey
.openai_key
.anthropic_key

# AWS and cloud credentials
.aws/
.azure/
.gcp/
*.credentials

# Government and security specific
classified/
restricted/
confidential/
*.classified
*.restricted
*.confidential

# Backup files
*.bak
*.backup
*.old
*.orig
*.save
*~

# Cache directories
.cache/
cache/
__pycache__/
.pytest_cache/
.mypy_cache/

# Local configuration overrides
local_settings.py
local_config.py
config.local.py
settings.local.py

# Development and testing
.env.local
.env.development
.env.test
.env.production
test_data/
sample_data/
mock_data/

# Monitoring and metrics
prometheus_data/
grafana_data/
metrics/
monitoring/

# Documentation builds
docs/build/
docs/_build/
site/

# IDE and editor files
*.swp
*.swo
*~
.vimrc
.vim/

# System files
*.pid
*.lock
*.sock
*.port
